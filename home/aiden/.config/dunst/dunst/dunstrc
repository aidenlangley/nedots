[global]
follow = keyboard

### Size & position
scale = 0
origin = bottom-right
width = (256, 512)
height = 256
offset = 12x32
padding = 12
horizontal_padding = 16

### Progress bar
progress_bar = true
progress_bar_height = 16
progress_bar_frame_width = 1
progress_bar_min_width = 240
progress_bar_max_width = 496

### Colours & other aesthetics
frame_color = "#504945"
frame_width = 1
# Define a color for the separator.
# possible values are:
#  * auto: dunst tries to find a color fitting to the background;
#  * foreground: use the same color as the foreground;
#  * frame: use the same color as the frame;
#  * anything else will be interpreted as a X color.
separator_color = frame
separator_height = 0
corner_radius = 0
transparency = 5

### Text ###
font = JetBrains Mono 10
line_height = 4
text_icon_padding = 12
alignment = left
vertical_alignment = center
ignore_newline = no
ellipsize = end

# The format of the message.  Possible variables are:
#   %a  appname
#   %s  summary
#   %b  body
#   %i  iconname (including its path)
#   %I  iconname (without its path)
#   %p  progress value if set ([  0%] to [100%]) or nothing
#   %n  progress value if set without any extra characters
#   %%  Literal %
# Markup is allowed
markup = full
format = "<b>%s</b>\n%b\n<small>%a</small>"

### Icons ###
icon_position = left
max_icon_size = 64
icon_path = /usr/share/icons/Qogir-dark/scalable/apps/:/usr/share/icons/Qogir-dark/scalable/devices/:/usr/share/icons/Qogir-dark/scalable/mimetypes/:/usr/share/icons/Qogir-dark/scalable/places/:/usr/share/icons/Qogir-dark/scalable/status/

### Misc ###
sort = yes
notification_limit = 0
indicate_hidden = yes
show_age_threshold = 60
stack_duplicates = true
hide_duplicate_count = true
show_indicators = yes
sticky_history = yes
history_length = 20

# Advanced settings
dmenu = /usr/bin/rofi -p dunst:
browser = /usr/bin/xdg-open
always_run_script = true
title = Dunst
class = Dunst
ignore_dbusclose = false

# Wayland
force_xwayland = false

# Legacy
force_xinerama = false

# Defines list of actions for each mouse event
# Possible values are:
# * none: Don't do anything.
# * do_action: Invoke the action determined by the action_name rule. If there is no
#              such action, open the context menu.
# * open_url: If the notification has exactly one url, open it. If there are multiple
#             ones, open the context menu.
# * close_current: Close current notification.
# * close_all: Close all notifications.
# * context: Open context menu for the notification.
# * context_all: Open context menu for all notifications.
# These values can be strung together for each mouse event, and
# will be executed in sequence.
mouse_left_click = do_action, close_current
mouse_middle_click = close_all
mouse_right_click = close_current

[urgency_low]
background = "#1d2021"
foreground = "#fbf1c7"
frame_color = "#504945"
timeout = 10

[urgency_normal]
background = "#1d2021"
foreground = "#fbf1c7"
frame_color = "#d5c4a1"
timeout = 10

[urgency_critical]
background = "#1d2021"
foreground = "#fbf1c7"
frame_color = "#fe8019"
timeout = 0

[dunstify]
desktop_entry = dunstify
default_icon = notifyconf

[notify_send]
desktop_entry = notify-send
default_icon = notifyconf

[firefox]
desktop_entry = Firefox
default_icon = firefox

# Every section that isn't one of the above is interpreted as a rules to
# override settings for certain messages.
#
# Messages can be matched by
#    appname (discouraged, see desktop_entry)
#    body
#    category
#    desktop_entry
#    icon
#    match_transient
#    msg_urgency
#    stack_tag
#    summary
#
# and you can override the
#    background
#    foreground
#    format
#    frame_color
#    fullscreen
#    new_icon
#    set_stack_tag
#    set_transient
#    set_category
#    timeout
#    urgency
#    skip_display
#    history_ignore
#    action_name
#    word_wrap
#    ellipsize
#    alignment
#
# Shell-like globbing will get expanded.
#
# Instead of the appname filter, it's recommended to use the desktop_entry filter.
# GLib based applications export their desktop-entry name. In comparison to the appname,
# the desktop-entry won't get localized.
#
# SCRIPTING
# You can specify a script that gets run when the rule matches by
# setting the "script" option.
# The script will be called as follows:
#   script appname summary body icon urgency
# where urgency can be "LOW", "NORMAL" or "CRITICAL".
#
# NOTE: It might be helpful to run dunst -print in a terminal in order
# to find fitting options for rules.

# Disable the transient hint so that idle_threshold cannot be bypassed from the
# client
#[transient_disable]
#    match_transient = yes
#    set_transient = no
#
# Make the handling of transient notifications more strict by making them not
# be placed in history.
#[transient_history_ignore]
#    match_transient = yes
#    history_ignore = yes

# fullscreen values
# show: show the notifications, regardless if there is a fullscreen window opened
# delay: displays the new notification, if there is no fullscreen window active
#        If the notification is already drawn, it won't get undrawn.
# pushback: same as delay, but when switching into fullscreen, the notification will get
#           withdrawn from screen again and will get delayed like a new notification
#[fullscreen_delay_everything]
#    fullscreen = delay
#[fullscreen_show_critical]
#    msg_urgency = critical
#    fullscreen = show

#[espeak]
#    summary = "*"
#    script = dunst_espeak.sh

#[script-test]
#    summary = "*script*"
#    script = dunst_test.sh

#[ignore]
#    # This notification will not be displayed
#    summary = "foobar"
#    skip_display = true

#[history-ignore]
#    # This notification will not be saved in history
#    summary = "foobar"
#    history_ignore = yes

#[skip-display]
#    # This notification will not be displayed, but will be included in the history
#    summary = "foobar"
#    skip_display = yes

#[signed_on]
#    appname = Pidgin
#    summary = "*signed on*"
#    urgency = low
#
#[signed_off]
#    appname = Pidgin
#    summary = *signed off*
#    urgency = low
#
#[says]
#    appname = Pidgin
#    summary = *says*
#    urgency = critical
#
#[twitter]
#    appname = Pidgin
#    summary = *twitter.com*
#    urgency = normal
#
#[stack-volumes]
#    appname = "some_volume_notifiers"
#    set_stack_tag = "volume"
#
# vim: ft=cfg

# Experimental features that may or may not work correctly. Do not expect them
# to have a consistent behaviour across releases.
[experimental]
# Calculate the dpi to use on a per-monitor basis.
# If this setting is enabled the Xft.dpi value will be ignored and instead
# dunst will attempt to calculate an appropriate dpi value for each monitor
# using the resolution and physical size. This might be useful in setups
# where there are multiple screens with very different dpi values.
per_monitor_dpi = false
